<?php
$this->htmlElement('body')->appendAttribute('class', 'page');
$this->pageTitle($page->title(), 2);
$showPagePagination = $this->siteSetting('show_page_pagination', true);
?>

<?php
$nav = $site->publicNav();
$container = $nav->getContainer();
$activePage = $nav->findActive($container);
if ($activePage) :
?>
  <?php if ($activePage['depth'] !== 0) : ?>
    <nav class="breadcrumbs"><?php echo $nav->breadcrumbs(); ?></nav>
  <?php endif; ?>
<?php endif; ?>

<?php /* if ($activePage) : ?>
  <?php if ($this->displayNavigation && $activePage['page']->hasPages()) : ?>
    <nav class="sub-menu"><?php echo $nav->menu()->renderSubMenu(); ?></nav>
  <?php endif; ?>
<?php endif; */ ?>

<?php $this->trigger('view.show.before'); ?>
<div class="blocks py-3 py-md-5">

  <?php echo $this->content; ?>

</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    let images = document.querySelectorAll('.media-render.file a img');
    images.forEach(function(image) {
      let anchorTitle = image.parentNode.getAttribute('title');
      if (anchorTitle && image.getAttribute('alt') === '') {
        image.setAttribute('alt', anchorTitle);
      }
      image.classList.add('img-fluid');
    });

    // Select all h2 elements within .page .blocks
    const headers = document.querySelectorAll('.page .blocks h2');

    headers.forEach(function(header) {
      // Get the text of the h2 element and create a web-friendly ID
      let id = header.textContent
        .toLowerCase() // Convert to lowercase
        .trim() // Trim whitespace from both sides
        .replace(/&/g, 'and') // Replace & with 'and'
        .replace(/[^a-z0-9]+/g, '-') // Replace spaces and special chars with dashes
        .replace(/-+/g, '-') // Replace multiple dashes with a single dash
        .replace(/^-|-$/g, ''); // Remove leading and trailing dashes

      // Assign the ID to the h2 element
      header.id = id;
    });
  });

  // Find all '.media-render.file' elements
  let mediaRenders = document.querySelectorAll('.media-render.file');

  mediaRenders.forEach(function(mediaRender) {
    // Check if the direct child is an 'img' element
    if (mediaRender.querySelector('img')) {
      // Get the parent '.center.large.file.row' element
      let parentRow = mediaRender.closest('.center.large.file.row');

      // Find the '.caption' div within the parent row
      let captionDiv = parentRow.querySelector('.caption');

      // Hide the original caption div
      captionDiv.style.display = 'none';

      // Create a new 'figcaption' element
      let figcaption = document.createElement('figcaption');
      figcaption.textContent = captionDiv.textContent.trim(); // Copy the text content from the original caption

      // Adjust the class of the attachment div to 'col-md-12'
      let attachmentDiv = parentRow.querySelector('.attachments');
      attachmentDiv.className = 'col-md-12';

      // Append the 'figcaption' to the '.media-render' div
      mediaRender.appendChild(figcaption);
    }
  });
</script>


<?php $this->trigger('view.show.after'); ?>
<?php if ($showPagePagination) : ?>
  <?php echo $this->sitePagePagination(); ?>
<?php endif; ?>